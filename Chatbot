import chatterbot
from chatterbot.trainers import ListTrainer
from chatterbot.logic import BestMatch
from chatterbot import filters
import spacy
from textblob import TextBlob

# NLP processing with spaCy
nlp = spacy.load("en_core_web_sm")

# Create chatbot with custom logic and filters
chatbot = chatterbot.ChatBot(
    "Education NGO Chatbot",
    logic_adapters=[
        {
            "import_path": "chatterbot.logic.BestMatch",
            "statement_comparison_function": chatterbot.comparisons.levenshtein_distance,
            "response_selection_method": chatterbot.response_selection.get_first_response,
        }
    ],
    filters=[filters.get_recent_repeated_responses],
)

# Conversation state tracker
conversation_state = {}

# Training data (expand with more examples)
training_data = [
    "What are the organization's goals?",
    "Our mission is to provide quality education to underprivileged children and empower them to reach their full potential.",
    "How can I get involved?",
    "There are many ways to contribute! You can volunteer as a tutor, donate to support our programs, or spread awareness about our cause.",
    "What educational programs do you offer?",
    "We offer a range of programs, including after-school tutoring, literacy workshops, STEM education, and life skills training.",
    # Add more training examples for various intents
]

# Train the chatbot
trainer = ListTrainer(chatbot)
trainer.train(training_data)

# Conversation loop with NLP, memory, and advanced features
while True:
    user_input = input("You: ")

    # NLP analysis
    doc = nlp(user_input)
    user_intent = doc.cats["intent"]  # Assuming intent classification

    # Handle different intents and scenarios
    if user_intent == "donate":
        response = "Your support means the world to us! You can donate easily through our website: [donation link]"

    elif user_intent == "volunteer":
        # Multi-turn dialogue to gather volunteer interests
        if "interests" not in conversation_state:
            response = "What are your volunteer interests? Please share a few areas you're passionate about."
            conversation_state["interests"] = True
        else:
            # Use interests to suggest opportunities (mock data)
            interests = conversation_state["interests"]
            response = f"Based on your interests, here are some volunteer opportunities that might be a great fit: {interests}"

    elif user_intent == "programs":
        # Provide detailed information about programs
        response = "We offer a variety of educational programs, including:\n- After-school tutoring\n- Literacy workshops\n- STEM education\n- Life skills training\n- ... (list more programs)"

    elif user_intent == "impact":
        # Share stories of impact
        response = "We've witnessed incredible transformations in the lives of the children we serve. Here are a few stories of impact:\n- [Story 1]\n- [Story 2]\n- [Story 3]\n- ... (add more stories)"

    # Sentiment analysis and empathetic responses
    sentiment = TextBlob(user_input).sentiment.polarity
    if sentiment < -0.5:
        response = f"I'm sorry to hear you're feeling {user_input.lower()}. How can I help?"

    # Handle other intents and provide default responses
    else:
        response = chatbot.get_response(user_input)

    print("Bot: ", response)

    # Store conversation history
    chatbot.storage.add_to_conversation_history(user_input, response)
